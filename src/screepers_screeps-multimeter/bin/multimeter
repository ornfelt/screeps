#!/usr/bin/env node

const dashdash = require('dashdash');
const configManager = require("../src/config_manager");
const Multimeter = require("../src/multimeter");
const setup = require('../src/setup');
const VERSION = require("../package.json").version;

process.on("unhandledRejection", function(err) {
  throw err;
});

let options = [
  {
    name: 'version',
    type: 'bool',
    help: 'Print version number and exit.',
  },
  {
    names: ['help', 'h'],
    type: 'bool',
    help: 'Print this help and exit.',
  },
  {
    names: ['server', 's'],
    type: 'string',
    help: "Which server configuration to use from .screeps.yaml (defaults to 'main').",
    helpArg: 'SERVERNAME',
    helpWrap: false,
  },
];
let parser = dashdash.createParser({ options });
try {
  var opts = parser.parse(process.argv);
} catch (err) {
  console.error('multimeter: error: ' + err.message);
  process.exit(1);
}

if (opts.version) {
  console.log('multimeter ' + VERSION);
  process.exit(0);
}
if (opts.help) {
  console.log('Usage: multimeter [OPTIONS]\noptions:\n' + parser.help({ includeEnv: true }).trimRight());
  process.exit(0);
}

async function main() {
  await setup();

  let [path, config] = await configManager.loadConfig(opts.server);
  if (! path) {
    console.error('No config file found. Please create a .screeps.yaml config file.');
    process.exit(1);
  }
  let app = new Multimeter(configManager);
  app.run();
  app.on("exit", () => {
    process.exit(0);
  });
}

main().catch(err => {
  console.error(err);
  process.exit(1);
});
